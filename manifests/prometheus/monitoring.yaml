apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-global
  labels:
    prometheus: global
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 9090
    protocol: TCP
    targetPort: web
  selector:
    prometheus: prometheus
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus-global
  labels:
    team: global
spec:
  selector:
    matchLabels:
      prometheus: global
  endpoints:
    - port: web
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
spec:
  retention: 720h
  serviceMonitorSelector:
    matchLabels:
      team: global
  ruleSelector:
    matchLabels:
      role: prometheus-rulefiles
      prometheus: prometheus
  version: v2.15.1
  serviceAccountName: prometheus
  # Temporary until we set up some kind of auth
  externalUrl: http://127.0.0.1:8001/api/v1/namespaces/default/services/prometheus-global:web/proxy/
  resources:
    requests:
      memory: 400Mi
  storage:
    volumeClaimTemplate:
      spec:
        resources:
          requests:
            storage: 40Gi
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  containers:
  - name: prometheus-config-reloader
    resources:
      requests:
        cpu: 5m
  - name: rules-configmap-reloader
    resources:
      requests:
        cpu: 5m
  - name: sidecar
    image: gcr.io/stackdriver-prometheus/stackdriver-prometheus-sidecar:0.7.0
    imagePullPolicy: IfNotPresent
    args:
    - "--stackdriver.project-id=decisive-cinema-167507"
    - "--prometheus.wal-directory=/data/wal"
    - "--stackdriver.kubernetes.location=europe-west1-d"
    - "--stackdriver.kubernetes.cluster-name=cluster-1"
    ports:
    - name: sidecar
      containerPort: 9091
    volumeMounts:
    - mountPath: /data
      name: prometheus-prometheus-db
      subPath: prometheus-db
    resources:
      requests:
        cpu: 5m
    securityContext:
      fsGroup: 2000
      runAsNonRoot: true
      runAsUser: 1000
